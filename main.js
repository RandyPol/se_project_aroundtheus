!function(){"use strict";function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var t=class{constructor(e){this._popupElement=document.querySelector(e),this._escCloseHandler=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._escCloseHandler)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._escCloseHandler)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__button-close").addEventListener("click",this.close.bind(this)),this._popupElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}};class r extends t{constructor(e,t){super(t),this._handleSubmit=e,this._form=this._popupElement.querySelector(".form"),this._inputList=this._form.querySelectorAll(".form__input"),this._submitButton=this._form.querySelector(".form__submit"),this._submitButtonnText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonnText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0),this._handleSubmit(this._getInputValues())}))}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}}document.querySelector(".cards"),document.querySelector("#modalEdit");const s=document.querySelector(".profile__name-edit"),n=(document.querySelector("#modalAdd"),document.querySelector(".profile__add-button")),i=(document.querySelector("#modalDelete").querySelector(".modal__button-yes"),document.querySelector("#modalEditAvatar"),document.querySelector(".profile__avatar-edit")),a=(document.querySelector(".profile__avatar"),new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}loadData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}patchUserInfo(e){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}postNewCard(e){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}putCardLike(e){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers})}deleteCardLike(e){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers})}patchUserAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"04304a71-d9c0-49b2-8283-cfc2c5afdf53","Content-Type":"application/json"}})),o=e=>{e.getCardLikeStatus()?a.deleteCardLike(e.getId()).then((t=>{e.toggleLikeButton(t.likes.length)})).catch((e=>{console.log(e)})):a.putCardLike(e.getId()).then((t=>{e.toggleLikeButton(t.likes.length)})).catch((e=>{console.log(e)}))},l=e=>{m.open(e)},c=e=>{_.open(e.target.src,e.target.alt)},d=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}addItem(e,t){const r=this._renderer(e,t);this._container.prepend(r)}renderInitialCards(e,t){e.forEach((e=>{this.addItem(e,t)}))}}({renderer:function(t,r){return new class{constructor(t,r,s,n,i,a){e(this,"_handleTrashButtonClick",(()=>{this._deleteCardModal(this)})),e(this,"_handleHeartButtonClick",(()=>{this._handleHeartClick(this)})),this._cardData=t,this._cardName=t.name,this._cardLink=t.link,this._cardLikes=t.likes.length,this._cardId=t._id,this._templateSelector=r,this._handleImageClick=s,this._deleteCardModal=n,this._currentUserId=i,this._handleHeartClick=a}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardLikeButton.addEventListener("click",this._handleHeartButtonClick),this._trashButton&&this._trashButton.addEventListener("click",this._handleTrashButtonClick),this._cardElementImage.addEventListener("click",this._handleImageClick)}deleteCard(){this._cardElement.remove(),this._cardElement=null}getCardLikeStatus(){return this._cardLikeButton.classList.contains("card__heart-button_isActive")}toggleLikeButton(e){this._cardLikeButton.classList.toggle("card__heart-button_isActive"),this._cardElementLikes.textContent=e}getId(){return this._cardId}generateCard(){this._cardElement=this._getTemplate(),this._cardElementImage=this._cardElement.querySelector(".card__column-image"),this._cardElementLikes=this._cardElement.querySelector(".card__heart-count");const e=this._cardElement.querySelector(".card__column-image-title");return this._trashButton=this._cardElement.querySelector(".card__trash-button"),this._cardData.owner._id!==this._currentUserId&&(this._trashButton.remove(),this._trashButton=null),this._cardLikeButton=this._cardElement.querySelector(".card__heart-button"),this._cardData.likes.some((e=>e._id===this._currentUserId))&&this._cardLikeButton.classList.add("card__heart-button_isActive"),this._setEventListeners(),this._cardElementImage.alt=this._cardName,this._cardElementImage.src=this._cardLink,this._cardElementLikes.textContent=this._cardLikes,e.textContent=this._cardName,this._cardElement}}(t,"#card",c,l,r,o).generateCard()}},".cards"),h={};var u;u={inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active",formSelector:".form"},Array.from(document.querySelectorAll(u.formSelector)).forEach((e=>{const t=new class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_hideInputError(e){this._errorElement=this._formElement.querySelector(`.${e.id}-input-error`),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""}_showInputError(e,t){const r=this._formElement.querySelector(`.${e.id}-input-error`);e.classList.add(this._inputErrorClass),r.textContent=t,r.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this.inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this.inputList)?(this.buttonElement.classList.add(this._inactiveButtonClass),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove(this._inactiveButtonClass),this.buttonElement.disabled=!1)}_setEventListeners(){this.inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this.buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._formElement.reset(),this._toggleButtonState(),this.inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners()}}(u,e),r=e.getAttribute("name");h[r]=t,t.enableValidation()}));const _=new class extends t{constructor(e,t,r){super(e),this._image=this._popupElement.querySelector(t),this._caption=this._popupElement.querySelector(r)}open(e,t){super.open(),this._image.src=e,this._image.alt=t,this._caption.textContent=t}}("#modalPicture",".modal__picture-full",".modal__piture-paragraph");_.setEventListeners();const m=new class extends t{constructor(e,t){super(e),this._handleCardDelete=t}open(e){super.open(),this._confirmDelete=()=>{this._handleCardDelete(e)},this._popupElement.querySelector(".modal__button-yes").addEventListener("click",this._confirmDelete)}close(){super.close(),this._popupElement.querySelector(".modal__button-yes").removeEventListener("click",this._confirmDelete)}}("#modalDelete",(e=>{a.deleteCard(e.getId()).then((()=>{e.deleteCard(),m.close()})).catch((e=>{console.log(e)}))}));m.setEventListeners();const p=new class{constructor(e){let{nameSelector:t,jobSelector:r,avatarSelector:s}=e;this._name=document.querySelector(t),this._about=document.querySelector(r),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}setUserInfo(e){let{name:t,about:r,avatar:s}=e;this._name.textContent=t,this._about.textContent=r,this._avatar.src=s}}({nameSelector:".profile__name",jobSelector:".profile__role",avatarSelector:".profile__avatar"}),E=new r((e=>{a.patchUserInfo(e).then((e=>{p.setUserInfo(e),E.close()})).catch((e=>{console.log(e)})).finally((()=>E.renderLoading(!1)))}),"#modalEdit");E.setEventListeners();const v=new r((e=>{a.postNewCard(e).then((e=>{d.addItem(e,e.owner._id),v.close()})).catch((e=>{console.log(e)})).finally((()=>v.renderLoading(!1)))}),"#modalAdd");v.setEventListeners();const g=new r((e=>{let{link:t}=e;a.patchUserAvatar({avatar:t}).then((e=>{p.setUserInfo(e),g.close()})).catch((e=>{console.log(e)})).finally((()=>g.renderLoading(!1)))}),"#modalEditAvatar");g.setEventListeners(),s.addEventListener("click",(()=>{h.profileForm.resetValidation(),E.setInputValues(p.getUserInfo()),E.open()})),n.addEventListener("click",(()=>{h.cardForm.resetValidation(),v.open()})),i.addEventListener("click",(()=>{h.avatarForm.resetValidation(),g.open()})),a.loadData().then((e=>{const[t,r]=e;d.renderInitialCards(r,t._id),p.setUserInfo(t)})).catch((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,